version: "3"
# https://taskfile.dev/#/installation

tasks:
  generate:
    desc: Generates mocks for ports interfaces
    cmds:
      - go generate ./...

  test:lint:
    desc: Runs linters for golang code
    cmds:
      - golangci-lint run

  test:unit:
    desc: Runs unit test with coverage output
    deps:
      - dir:out
    vars:
      OUT: ./out/unit-coverage.out
      HTML: ./out/unit-coverage.html
    cmds:
      - go test -tags=unit -coverprofile={{.OUT}} -coverpkg=./... ./...
      - task: test:coverage
        vars:
          OUT: "{{.OUT}}"
          HTML: "{{.HTML}}"

  test:smoke:
    desc: Run smoke tests for project
    deps:
      - dir:out
    vars:
      OUT: ./out/smoke-coverage.out
      HTML: ./out/smoke-coverage.html
      DOCKERCOMPOSE: docker-compose.smoke.yml
    cmds:
      - docker-compose -f {{.DOCKERCOMPOSE}} up --force-recreate -d
      - defer: docker-compose -f {{.DOCKERCOMPOSE}} down
      - go test -tags=smoke -coverprofile={{.OUT}} -coverpkg=./... ./...
      - task: test:coverage
        vars:
          OUT: "{{.OUT}}"
          HTML: "{{.HTML}}"

  test:coverage:
    desc: Build coverage report from tests result
    cmds:
      - go tool cover -html={{.OUT}} -o {{.HTML}}
      - go tool cover -func={{.OUT}}

  dir:out:
    desc: Creates out directiory
    cmds:
      - mkdir -p out
    status:
      - test -d out
